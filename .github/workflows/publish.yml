name: Build & Publish Rust Book eBooks

on:
  schedule:
    - cron: '0 3 * * *'   # Nightly at 03:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry and binaries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install mdBook (prebuilt)
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: 'latest'

      - name: Install mdbook-epub (if needed)
        run: |
          if ! command -v mdbook-epub > /dev/null; then
            cargo install mdbook-epub
          fi

      - name: Clone the Rust Book source
        run: |
          git clone --depth 1 https://github.com/rust-lang/book.git rust-book

      - name: Enable EPUB backend in book.toml
        run: |
          echo "[output.epub]" >> rust-book/book.toml

      - name: Build EPUB with mdbook
        run: |
          cd rust-book
          mdbook build

      - name: Find and copy EPUB to site directory
        run: |
          EPUB_FILE=$(find rust-book/book/epub -name '*.epub' | head -n 1)
          mkdir -p site
          cp "$EPUB_FILE" site/rust-book.epub

      - name: Convert EPUB to AZW3
        run: |
          ebook-convert site/rust-book.epub site/rust-book.azw3

      - name: Update mdBook README with links
        run: |
          cat > mdbook/src/README.md <<EOF
          # Rust Book Nightly eBooks

          Download the latest builds:

          - [Download EPUB](../rust-book.epub)
          - [Download AZW3 (Kindle)](../rust-book.azw3)
          EOF

      - name: Build mdBook site
        run: |
          cd mdbook
          mdbook build

      - name: Prepare site directory
        run: |
          # Copy the mdBook output to the site directory
          cp -r mdbook/book/* site/
          # Copy eBooks into the site directory (already there, but ensures they're present)
          cp site/rust-book.epub site/rust-book.epub
          cp site/rust-book.azw3 site/rust-book.azw3

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
