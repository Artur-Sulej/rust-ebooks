name: Publish Rust eBooks

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        book:
          - id: rust-book
            repo: https://github.com/rust-lang/book.git
            epub_out: rust-book.epub
            azw3_out: rust-book.azw3
            title: "The Rust Programming Language"
          - id: rust-by-example
            repo: https://github.com/rust-lang/rust-by-example.git
            epub_out: rust-by-example.epub
            azw3_out: rust-by-example.azw3
            title: "Rust By Example"

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y calibre git

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install mdBook (prebuilt)
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: 'latest'

      - name: Install mdbook-epub (if needed)
        run: |
          if ! command -v mdbook-epub > /dev/null; then
            cargo install mdbook-epub
          fi

      - name: Clone the book source
        run: |
          git clone --depth 1 ${{ matrix.book.repo }} ${{ matrix.book.id }}

      - name: Enable EPUB backend in book.toml
        run: |
          echo "[output.epub]" >> ${{ matrix.book.id }}/book.toml

      - name: Build EPUB with mdbook
        run: |
          cd ${{ matrix.book.id }}
          mdbook build

      - name: Find and copy EPUB to artifact dir
        run: |
          mkdir -p ebooks
          EPUB_FILE=$(find ${{ matrix.book.id }}/book/epub -name '*.epub' | head -n 1)
          cp "$EPUB_FILE" ebooks/${{ matrix.book.epub_out }}
          ebook-convert ebooks/${{ matrix.book.epub_out }} ebooks/${{ matrix.book.azw3_out }}

      - name: Upload eBooks artifact
        uses: actions/upload-artifact@v4
        with:
          name: ebooks-${{ matrix.book.id }}
          path: ebooks/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
